[{"/home/federico/Development/twitter-barometer/src/index.js":"1","/home/federico/Development/twitter-barometer/src/App.js":"2","/home/federico/Development/twitter-barometer/src/reportWebVitals.js":"3","/home/federico/Development/twitter-barometer/src/components/Header.js":"4","/home/federico/Development/twitter-barometer/src/components/Hashtags.js":"5","/home/federico/Development/twitter-barometer/src/components/AddHashtag.js":"6","/home/federico/Development/twitter-barometer/src/components/Chart1.js":"7","/home/federico/Development/twitter-barometer/src/components/Chart2.js":"8","/home/federico/Development/twitter-barometer/src/components/LineChart.js":"9","/home/federico/Development/twitter-barometer/src/components/Pie.js":"10","/home/federico/Development/twitter-barometer/src/components/Histo.js":"11","/home/federico/Development/twitter-barometer/src/ashtagModule.js":"12","/home/federico/Development/twitter-barometer/src/firebase.js":"13"},{"size":500,"mtime":1606853867078,"results":"14","hashOfConfig":"15"},{"size":2899,"mtime":1607450597477,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1606853867078,"results":"17","hashOfConfig":"15"},{"size":133,"mtime":1606854769614,"results":"18","hashOfConfig":"15"},{"size":344,"mtime":1607028561860,"results":"19","hashOfConfig":"15"},{"size":843,"mtime":1607164323419,"results":"20","hashOfConfig":"15"},{"size":466,"mtime":1607101390713,"results":"21","hashOfConfig":"15"},{"size":1145,"mtime":1607164325163,"results":"22","hashOfConfig":"15"},{"size":2072,"mtime":1607333381379,"results":"23","hashOfConfig":"15"},{"size":1574,"mtime":1607181947621,"results":"24","hashOfConfig":"15"},{"size":2527,"mtime":1607334658485,"results":"25","hashOfConfig":"15"},{"size":1404,"mtime":1607340721340,"results":"26","hashOfConfig":"15"},{"size":605,"mtime":1607337892526,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"11wsppc",{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/home/federico/Development/twitter-barometer/src/index.js",[],["59","60"],"/home/federico/Development/twitter-barometer/src/App.js",["61","62","63","64","65"],"import React from 'react';\nimport ashtagModule from './ashtagModule';\n//import firebase from './firebase';\n\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Header from './components/Header'\nimport Hashtags from './components/Hashtags'\nimport AddHashtag from './components/AddHashtag'\nimport Chart1 from './components/Chart1'\nimport Chart2 from './components/Chart2'\nimport LineChart from './components/LineChart'\nimport Pie from './components/Pie'\nimport Histo from './components/Histo'\n//import Line from './components/Line'\nimport * as d3 from \"d3\";\nfunction App() {\n\n  const [items, setItems] = React.useState([]);\n  \n\n  React.useEffect(() => {\n    ashtagModule.getAshtags(setItems) // set items calls another re-render, so the whole App would run again\n  }, []);\n\n  const handleAddNewHashtag = (value) => {\n    const newItems = [...items,value]\n    setItems(newItems);\n    console.log(newItems)\n    ashtagModule.saveNewAshtag(value)\n  }\n\n  const removeItem = (item) => {\n    console.log(item);\n    const itemsWithoutRemoved = items.filter(arrayItem => arrayItem !== item)\n    setItems(itemsWithoutRemoved)\n    console.log(items)\n  }\n\n    const generatePieData = (value, length = 5) =>\n      d3.range(length).map((item, index) => ({\n        date: index,\n        value: value === null || value === undefined ? Math.random() * 100 : value\n      }));\n\n    const [dataPie, setDataPie] = React.useState(generatePieData());\n\n    // const changeData = () => {\n    //   setDataPie(generateData());\n    // };\n\n    const generateLineData = (value, length = 50) =>\n      d3.range(length).map((item, index) => ({\n        date: index,\n        value: value === null || value === undefined ? Math.random() * 100 : value\n      }));\n\n    const [dataLine, setDataLine] = React.useState(generateLineData());\n    //console.log(dataLine)\n\n    const generateHistoData = (value, length = 500) =>\n      d3.range(length).map((item, index) => ({\n        date: index,\n        value: value === null || value === undefined ? Math.random() * 1000 : value\n      }));\n\n    const [dataHisto, setDataHisto] = React.useState(generateHistoData());\n    console.log(dataHisto)\n\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid direction=\"row\">\n        <Header headerText='Twitter Barometer'/>\n      </Grid>\n      \n      <AddHashtag addHashtag={handleAddNewHashtag}/>\n      \n\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <Hashtags items={items} onItemRemove={removeItem}/>\n        <Pie data={dataPie} innerRadius={50} outerRadius={120} height={300} width={300}/>\n      </Grid>\n\n      <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n        <LineChart data={dataLine} height={300} width={300}/> \n        <Histo data={dataHisto} height={300} width={300}/>\n      </Grid>\n      \n    </Container>\n  );\n}\n\nexport default App;\n","/home/federico/Development/twitter-barometer/src/reportWebVitals.js",[],"/home/federico/Development/twitter-barometer/src/components/Header.js",[],"/home/federico/Development/twitter-barometer/src/components/Hashtags.js",[],"/home/federico/Development/twitter-barometer/src/components/AddHashtag.js",[],"/home/federico/Development/twitter-barometer/src/components/Chart1.js",[],"/home/federico/Development/twitter-barometer/src/components/Chart2.js",[],"/home/federico/Development/twitter-barometer/src/components/LineChart.js",["66","67"],"import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nfunction Line(props) {\n    // const [data, setData] = React.useState([5, 3, 6, 1, 2]);\n  \n    const ref = useRef();\n    // const createLine = d3\n    //     .line()\n    //     .value(d => d.value)\n    //     .sort(null);\n    const colors = d3.scaleOrdinal(d3.schemeCategory10);\n    const margin = {top: 30, right: 30, bottom: -30, left: 30}\n    useEffect(\n        () => {\n            //const data = createLine(props.data);\n            const singleLine = d3.select(ref.current)\n                .append(\"svg\")\n                    .attr(\"width\", props.width + margin.left + margin.right)\n                    .attr(\"height\", props.height - margin.bottom)// \n                .append(\"g\")\n                    .attr(\"transform\",\n                        \"translate(\" + margin.left + \",\" + margin.bottom + \")\");\n            \n            var y = d3.scaleLinear()\n                    .domain([0, d3.max(props.data, function(d) { return +d.value; })])\n                    .range([ props.height, 0 ]);\n                singleLine.append(\"g\")\n                    .call(d3.axisLeft(y));\n\n                var x = d3.scaleLinear()\n                    .domain(d3.extent(props.data, function(d) { return d.date; }))\n                    .range([0, props.width]);\n                singleLine.append(\"g\")\n                .attr(\"transform\", \"translate(0,\" + props.height + \")\")\n                    .call(d3.axisBottom(x));\n\n\n            singleLine.append(\"path\")\n                .datum(props.data)\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke\", \"steelblue\")\n                .attr(\"stroke-width\", 1.5)\n                .attr(\"d\", d3.line()\n                    .x(function(d) { return x(d.date) })\n                    .y(function(d) { return y(d.value) })\n                    )\n\n        },\n    [props.data]\n    )  \n\n  return (\n    <svg width={props.width} height={props.height}>\n      <g\n        ref={ref}\n      />\n    </svg>\n  );\n};\n\nexport default Line;\n\n////<button onClick={update}>Update</button>","/home/federico/Development/twitter-barometer/src/components/Pie.js",["68"],"import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\n\nconst Pie = props => {\n  const ref = useRef(null);\n  const createPie = d3\n    .pie()\n    .value(d => d.value)\n    .sort(null);\n  const createArc = d3\n    .arc()\n    .innerRadius(props.innerRadius)\n    .outerRadius(props.outerRadius);\n  const colors = d3.scaleOrdinal(d3.schemeCategory10);\n  const format = d3.format(\".2f\");\n\n  useEffect(\n    () => {\n      const data = createPie(props.data);\n      const group = d3.select(ref.current);\n      const groupWithData = group.selectAll(\"g.arc\").data(data);\n\n      groupWithData.exit().remove();\n\n      const groupWithUpdate = groupWithData\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"arc\");\n\n      const path = groupWithUpdate\n        .append(\"path\")\n        .merge(groupWithData.select(\"path.arc\"));\n\n      path\n        .attr(\"class\", \"arc\")\n        .attr(\"d\", createArc)\n        .attr(\"fill\", (d, i) => colors(i));\n\n      const text = groupWithUpdate\n        .append(\"text\")\n        .merge(groupWithData.select(\"text\"));\n\n      text\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"alignment-baseline\", \"middle\")\n        .attr(\"transform\", d => `translate(${createArc.centroid(d)})`)\n        .style(\"fill\", \"black\")\n        .style(\"font-size\", 10)\n        .text(d => format(d.value));\n    },\n    [props.data]\n  );\n\n  return (\n    <svg width={props.width} height={props.height}>\n      <g\n        ref={ref}\n        transform={`translate(${props.outerRadius} ${props.outerRadius})`}\n      />\n    </svg>\n  );\n};\n\nexport default Pie;","/home/federico/Development/twitter-barometer/src/components/Histo.js",[],"/home/federico/Development/twitter-barometer/src/ashtagModule.js",[],"/home/federico/Development/twitter-barometer/src/firebase.js",[],["69","70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":10,"column":8,"nodeType":"77","messageId":"78","endLine":10,"endColumn":14},{"ruleId":"75","severity":1,"message":"79","line":11,"column":8,"nodeType":"77","messageId":"78","endLine":11,"endColumn":14},{"ruleId":"75","severity":1,"message":"80","line":46,"column":21,"nodeType":"77","messageId":"78","endLine":46,"endColumn":31},{"ruleId":"75","severity":1,"message":"81","line":58,"column":22,"nodeType":"77","messageId":"78","endLine":58,"endColumn":33},{"ruleId":"75","severity":1,"message":"82","line":67,"column":23,"nodeType":"77","messageId":"78","endLine":67,"endColumn":35},{"ruleId":"75","severity":1,"message":"83","line":12,"column":11,"nodeType":"77","messageId":"78","endLine":12,"endColumn":17},{"ruleId":"84","severity":1,"message":"85","line":50,"column":5,"nodeType":"86","endLine":50,"endColumn":17,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"88","line":51,"column":5,"nodeType":"86","endLine":51,"endColumn":17,"suggestions":"89"},{"ruleId":"71","replacedBy":"90"},{"ruleId":"73","replacedBy":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'Chart1' is defined but never used.","Identifier","unusedVar","'Chart2' is defined but never used.","'setDataPie' is assigned a value but never used.","'setDataLine' is assigned a value but never used.","'setDataHisto' is assigned a value but never used.","'colors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'margin.bottom', 'margin.left', 'margin.right', 'props.height', and 'props.width'. Either include them or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has missing dependencies: 'colors', 'createArc', 'createPie', and 'format'. Either include them or remove the dependency array.",["95"],["92"],["93"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [margin.bottom, margin.left, margin.right, props.data, props.height, props.width]",{"range":"100","text":"101"},"Update the dependencies array to be: [colors, createArc, createPie, format, props.data]",{"range":"102","text":"103"},[1865,1877],"[margin.bottom, margin.left, margin.right, props.data, props.height, props.width]",[1342,1354],"[colors, createArc, createPie, format, props.data]"]